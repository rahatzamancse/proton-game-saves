name: Update AUR Package (Docker Alternative)

on:
  release:
    types: [published]

jobs:
  update-aur:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm git openssh base-devel wget

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get release information
        id: release
        run: |
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          echo "tarball_url=https://github.com/${{ github.repository }}/archive/${GITHUB_REF#refs/tags/}.tar.gz" >> $GITHUB_OUTPUT

      - name: Download and calculate SHA256
        id: checksum
        run: |
          wget -O release.tar.gz "${{ steps.release.outputs.tarball_url }}"
          echo "sha256=$(sha256sum release.tar.gz | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Setup SSH for AUR
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > ~/.ssh/aur
          chmod 600 ~/.ssh/aur
          ssh-keyscan -H aur.archlinux.org >> ~/.ssh/known_hosts
          cat >> ~/.ssh/config << EOF
          Host aur.archlinux.org
            HostName aur.archlinux.org
            User aur
            IdentityFile ~/.ssh/aur
            IdentitiesOnly yes
          EOF

      - name: Clone AUR repository
        run: |
          git clone ssh://aur@aur.archlinux.org/proton-game-saves.git aur-repo
          cd aur-repo
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      - name: Update PKGBUILD
        run: |
          cd aur-repo
          # Update version
          sed -i "s/^pkgver=.*/pkgver=${{ steps.release.outputs.version }}/" PKGBUILD
          # Update checksum
          sed -i "s/^sha256sums=.*/sha256sums=('${{ steps.checksum.outputs.sha256 }}')/" PKGBUILD
          # Reset pkgrel to 1 for new version
          sed -i "s/^pkgrel=.*/pkgrel=1/" PKGBUILD

      - name: Generate .SRCINFO
        run: |
          cd aur-repo
          makepkg --printsrcinfo > .SRCINFO

      - name: Validate PKGBUILD
        run: |
          cd aur-repo
          # Create a temporary user for makepkg (can't run as root)
          useradd -m -s /bin/bash builder
          chown -R builder:builder .
          
          # Test that PKGBUILD is valid
          sudo -u builder makepkg --nobuild --nodeps

      - name: Commit and push to AUR
        run: |
          cd aur-repo
          git add PKGBUILD .SRCINFO
          git commit -m "Update to version ${{ steps.release.outputs.version }}

          - Automated update from GitHub release ${{ steps.release.outputs.tag_name }}
          - Updated pkgver to ${{ steps.release.outputs.version }}
          - Updated sha256sums
          - Reset pkgrel to 1"
          
          git push origin master

      - name: Notify on success
        run: |
          echo "âœ… AUR package successfully updated to version ${{ steps.release.outputs.version }}"
          echo "ðŸ“¦ Users can now install with: paru -S proton-game-saves"
