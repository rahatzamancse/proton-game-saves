name: Update AUR

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 0.1.0)"
        required: true
  release:
    types: [published]

jobs:
  aur:
    name: Update AUR package
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    env:
      AUR_SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
    steps:
      - name: Install base-devel and tools
        run: |
          pacman -Syu --noconfirm git base-devel rust cargo wget openssh
          pacman -S --noconfirm pacman sudo
      - name: Verify makepkg availability
        run: |
          which makepkg
          makepkg --version
      - name: Create build user (non-root)
        run: |
          useradd -m build
          echo "build ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/build
          chown -R build:build /github /__w || true
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure SSH for AUR
        if: ${{ env.AUR_SSH_PRIVATE_KEY != '' }}
        run: |
          mkdir -p /home/build/.ssh
          echo "${AUR_SSH_PRIVATE_KEY}" > /home/build/.ssh/id_ed25519
          chmod 600 /home/build/.ssh/id_ed25519
          ssh-keyscan aur.archlinux.org >> /home/build/.ssh/known_hosts
          chown -R build:build /home/build/.ssh
        env:
          AUR_SSH_PRIVATE_KEY: ${{ env.AUR_SSH_PRIVATE_KEY }}
      - name: Run update script
        run: |
          VERSION_INPUT="${VERSION_INPUT}"
          RELEASE_TAG="${RELEASE_TAG}"
          if [ -z "$VERSION_INPUT" ] && [ -n "$RELEASE_TAG" ]; then
            VERSION_INPUT="$RELEASE_TAG"
          fi
          VERSION_INPUT="$(echo "$VERSION_INPUT" | sed 's/^v//')"
          su - build -c "cd '${GITHUB_WORKSPACE}' && CI=1 packaging/aur/update-aur.sh '${VERSION_INPUT}'"
        env:
          VERSION_INPUT: ${{ github.event.inputs.version }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
